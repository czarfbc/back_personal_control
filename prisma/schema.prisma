generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String

  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @default(now()) @db.Timestamptz()

  Schedule     Schedule[]
  TodoList     TodoList[]
  BankAccounts BankAccounts[]
}

model Schedule {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  date        DateTime @db.Timestamptz()

  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @default(now()) @db.Timestamptz()

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model TodoList {
  id   Int        @id @default(autoincrement())
  todo String
  done TodoStatus @default(PENDING)

  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @default(now()) @db.Timestamptz()

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model BankAccounts {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now()) @db.Timestamptz()

  Transaction Transaction[]

  User   User @relation(fields: [userId], references: [id])
  userId Int
}

model Transaction {
  id          Int             @id @default(autoincrement())
  description String?
  category    String?
  amount      Decimal         @default(0) @db.Money
  observation String?
  type        TransactionType @default(EXPENSE)

  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @default(now()) @db.Timestamptz()

  BankAccounts   BankAccounts @relation(fields: [bankAccountsId], references: [id])
  bankAccountsId Int
}

enum TodoStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TransactionType {
  INCOME
  EXPENSE
}
