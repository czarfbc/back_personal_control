generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
  iv       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Schedule            Schedule[]
  TodoList            TodoList[]
  BankAccount         BankAccount[]
  TransactionCategory TransactionCategory[]
}

model Schedule {
  id         Int      @id @default(autoincrement())
  scheduling String
  date       DateTime @db.Timestamptz()

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model TodoList {
  id     Int        @id @default(autoincrement())
  todo   String
  status TodoStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model BankAccount {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaction Transaction[]

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Transaction {
  id          Int             @id @default(autoincrement())
  description String?
  date        DateTime        @db.Date
  amount      Decimal         @default(0) @db.Money
  observation String?
  type        TransactionType @default(EXPENSE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BankAccount           BankAccount         @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)
  bankAccountId         Int
  TransactionCategory   TransactionCategory @relation(fields: [transactionCategoryId], references: [id], onDelete: Cascade)
  transactionCategoryId Int
}

model TransactionCategory {
  id       Int    @id @default(autoincrement())
  category String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaction Transaction[]
  User        User?         @relation(fields: [userId], references: [id])
  userId      Int?
}

enum TodoStatus {
  CANCELED
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TransactionType {
  INCOME
  EXPENSE
}
